

面试的时候可能是直接让画出类图。

创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。
	
结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。

行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代器模式、责任链模式、命令模式、
	备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。


挑几个记一下
	工厂。单例。模板方法。建造者。代理。适配器。装饰器。观察者。命令。


“工厂，模板方法，建造者”，这几种模式都是创造对象，有啥区别？
	建造者模式侧重“组装产品的几个部分”。
	模板方法模式侧重不同步骤的具体实现不同。
	工厂方法模式，外界的干预很少，指出创造哪种产品，工厂类就自己创建了。

单例模式
	1.构造器必须是private。用一个private static final的属性复制new Singleton()。用一个public static的getSingleton()返回这个唯一的实例。
	这个实例是在初始化这个类（不是初始化对象，是这个类第一次出现的时候加载这个类）的时候创建的。
	2.在生命field的时候不new，在getSingleton()的时候new。这时候要注意线程安全，需要给getSingleton()加synchronized关键字，或者用lock做更精细的控制。


